name: deploy preview
on:
  pull_request:
    types: [opened, reopened, synchronize, closed]

permissions:
  deployments: write

env:
  FLY_API_TOKEN: ${{ secrets.AUTH_METADATA_MICROSERVICE_FLY_IO_GITHUB_ACTION }}
  FLY_ORG: gobazzinga-inc-584

jobs:
  build_check:
    uses: ./.github/workflows/build.yml
    with:
      publish-artifact: true
    secrets: inherit

  preview:
    needs: build_check
    runs-on: ubuntu-latest

    # Only run one deployment at a time per PR.
    concurrency:
      group: pr-${{ github.event.number }}

    # Create a GitHub deployment environment per staging app so it shows up
    # in the pull request UI.
    environment:
      name: pr-${{ github.event.number }}
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - uses: actions/checkout@v3
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: build-musl
      - run: chmod +x target/x86_64-unknown-linux-musl/release/yral-metadata-server

      - name: Deploy
        id: deploy
        uses: superfly/fly-pr-review-apps@1.2.1

      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Set secret tokens
        if: ${{ github.event.pull_request.merged == false}}
        run: |
          APP_NAME="pr-${{github.event.number}}-${{github.repository_owner}}-yral-metadata"
          flyctl secrets set REDIS_URL="$REDIS_URL" --app "$APP_NAME" --stage
          flyctl secrets set YRAL_METADATA_USER_NOTIFICATION_API_KEY="$YRAL_METADATA_USER_NOTIFICATION_API_KEY" --app "$APP_NAME" --stage
          flyctl secrets set JWT_PUBLIC_KEY="$JWT_PUBLIC_KEY" --app "$APP_NAME" --stage
          flyctl secrets set CLIENT_NOTIFICATIONS_GOOGLE_SERVICE_ACCOUNT_KEY="$CLIENT_NOTIFICATIONS_GOOGLE_SERVICE_ACCOUNT_KEY" --app "$APP_NAME" --stage
          flyctl secrets set GOOGLE_CLIENT_NOTIFICATIONS_PROJECT_ID="$GOOGLE_CLIENT_NOTIFICATIONS_PROJECT_ID" --app "$APP_NAME" --stage
          flyctl secrets set BACKEND_ADMIN_IDENTITY="$BACKEND_ADMIN_IDENTITY" --app "$APP_NAME" --stage
          flyctl secrets set YRAL_AUTH_PUBLIC_KEY="$YRAL_AUTH_PUBLIC_KEY" --app "$APP_NAME" --stage
          flyctl secrets set GOOGLE_CLIENT_NOTIFICATIONS_SENDER_ID="$GOOGLE_CLIENT_NOTIFICATIONS_SENDER_ID" --app "$APP_NAME" --stage
          flyctl secrets set QSTASH_CURRENT_SIGNING_KEY="$QSTASH_CURRENT_SIGNING_KEY" --app "$APP_NAME" --stage
          flyctl secrets set QSTASH_NEXT_SIGNING_KEY="$QSTASH_NEXT_SIGNING_KEY" --app "$APP_NAME" --stage
          flyctl secrets set KYC_SERVER_TOKEN="$KYC_SERVER_TOKEN" --app "$APP_NAME" --stage

          echo "Redeploying preview app to apply secrets..."
          flyctl deploy --app "$APP_NAME" --remote-only --detach
        env:
          REDIS_URL: ${{ secrets.METADATA_FLY_IO_UPSTASH_REDIS_DATABASE_CONNECTION_STRING }}
          FLY_API_TOKEN: ${{ secrets.AUTH_METADATA_MICROSERVICE_FLY_IO_GITHUB_ACTION }} # This token is for flyctl itself
          YRAL_METADATA_USER_NOTIFICATION_API_KEY: ${{ secrets.YRAL_METADATA_USER_NOTIFICATION_API_KEY }}
          JWT_PUBLIC_KEY: ${{ secrets.YRAL_AUTH_METADATA_SERVICE_ACCESS_PUBLIC_KEY }}
          CLIENT_NOTIFICATIONS_GOOGLE_SERVICE_ACCOUNT_KEY: ${{ secrets.CLIENT_NOTIFICATIONS_GOOGLE_SERVICE_ACCOUNT_KEY }}
          BACKEND_ADMIN_IDENTITY: ${{ secrets.YRAL_APP_ADMIN_AND_PROPOSAL_SUBMITTER_DFX_IDENTITY_SECP_PRIVATE_KEY }}
          YRAL_AUTH_PUBLIC_KEY: ${{ secrets.YRAL_AUTH_JWT_VERIFY_PUBLIC_KEY }}
          GOOGLE_CLIENT_NOTIFICATIONS_PROJECT_ID: ${{ vars.GOOGLE_CLIENT_NOTIFICATIONS_PROJECT_ID }}
          GOOGLE_CLIENT_NOTIFICATIONS_SENDER_ID: ${{ vars.GOOGLE_CLIENT_NOTIFICATIONS_SENDER_ID }}
          QSTASH_CURRENT_SIGNING_KEY: ${{ secrets.QSTASH_CURRENT_SIGNING_KEY }}
          QSTASH_NEXT_SIGNING_KEY: ${{ secrets.QSTASH_NEXT_SIGNING_KEY }}
          KYC_SERVER_TOKEN: ${{ secrets.KYC_SERVER_TOKEN }}
